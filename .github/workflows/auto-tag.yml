name: Auto Increment Tag

on:
  push:
    branches:
      - main  # Specify your target branches

jobs:
  update-tag:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch full history to ensure all tags are available

    # Step 2: Set up Git
    - name: Set up Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    # Step 3: Fetch all tags
    - name: Fetch all tags
      run: git fetch --tags

    # Step 4: Get the latest tag
    - name: Get the latest tag
      id: get-latest-tag
      run: |
        # Retrieve the latest tag, or default to v0.0.0 if no tags exist
        latest_tag=$(git tag --list | sort -V | tail -n 1)
        latest_tag=${latest_tag:-v0.0.0}
        echo "latest=$latest_tag" >> $GITHUB_ENV

    # Step 5: Calculate the next tag
    - name: Calculate new version
      id: new-tag
      run: |
        # Extract the major, minor, and patch components of the latest tag
        latest=${{ env.latest }}
        IFS='.' read -r major minor patch <<< "${latest#v}"
        
        # Increment the patch number, reset if it reaches 9
        if [ "$patch" -eq 9 ]; then
          patch=0
          # Increment the minor number, reset if it reaches 99
          if [ "$minor" -eq 99 ]; then
            minor=0
            # Increment the major number
            major=$((major+1))
          else
            minor=$((minor+1))
          fi
        else
          patch=$((patch+1))
        fi

        # Construct the new version tag
        new_tag="v$major.$minor.$patch"
        echo "new_tag=$new_tag" >> $GITHUB_ENV
        echo "Calculated new tag: $new_tag"

    # Step 6: Force-update the tag
    - name: Update tag
      run: |
        git tag -f ${{ env.new_tag }}
        git push origin -f ${{ env.new_tag }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Step 7: Update the release to point to the updated tag
    - name: Update release to use the new tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        release_id=$(gh release view ${{ env.latest }} --json id -q .id)
        gh release edit $release_id --tag ${{ env.new_tag }}
